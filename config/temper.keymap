#include <behaviors.dtsi>
#include "keys_se.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define RIGHT_HAND 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define LEFT_HAND 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define THUMBS 30 31 32 33 34 35
#define HM_TAP_TERM 280
#define HM_QUICK_TAP 175
#define HM_REQ_IDLE 150

#define ___ &trans

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
    behaviors {
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <HM_TAP_TERM>;
            quick-tap-ms = <HM_QUICK_TAP>;
            require-prior-idle-ms = <HM_REQ_IDLE>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_HAND THUMBS>;
            hold-trigger-on-release;
        };
        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <HM_TAP_TERM>;
            quick-tap-ms = <HM_QUICK_TAP>;
            require-prior-idle-ms = <HM_REQ_IDLE>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_HAND THUMBS>;
            hold-trigger-on-release;
        };
        smartshift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;
            mods = <(MOD_LSFT)>;
        };
        &sk {
            // to avoid sticky shift potentially lasting for two keypresses instead of one
            quick-release;
        };
    };
    qdq: quote_double_quote {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp SE_QUOT>, <&kp SE_DQUO>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
// ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐   ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐
        &kp Q         &kp W         &kp E         &kp R         &kp T              &kp Y        &kp U         &kp I         &kp O         &kp P
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &lhm LALT A   &lhm LGUI S   &lhm LCTL D   &lhm LSFT F      &kp G              &kp H     &rhm LSFT J   &rhm LCTL K   &rhm LGUI L  &rhm LALT &qdq
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Z         &kp X         &kp C         &kp V         &kp B              &kp N        &kp M       &kp COMMA      &kp DOT     &kp SE_MINS
// └─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┘
                                 &smartshift    &lt LOWER BSPC   &kp ESC           &kp RET    &lt RAISE SPACE  &kp TAB
//                             └─────────────┴─────────────┴─────────────┘   └─────────────┴─────────────┴─────────────┘
            >;
        };

        lower_layer {
            bindings = <
// ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐   ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐
      &kp TILDE    &kp SE_LABK   &kp SE_CIRC   &kp SE_RABK     &kp PRCNT          &kp STAR       &kp N7        &kp N8        &kp N9      &kp MINUS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &kp CARET    &kp SE_LCBR    &trans       &kp SE_RCBR      &kp DLLR         &kp UNDER       &kp N4        &kp N5        &kp N6      &kp PLUS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &trans         &kp LT        &kp LBKT      &kp RBKT       &kp GT            &trans        &kp N1        &kp N2        &kp N3      &kp EQUAL
// └─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┘
                                    ___           ___            ___            &kp BSPC        ___          &kp N0
//                             └─────────────┴─────────────┴─────────────┘   └─────────────┴─────────────┴─────────────┘
            >;
        };

        raise_layer {
            bindings = <
// ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐   ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐
        &trans     &kp SE_LBRC        &trans   &kp SE_RBRC        &trans       &kp SE_BLSH   &kp SE_PIPE   &kp SE_SLSH       &kp TAB     &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &sk LSHFT    &kp SE_LPRN      &trans     &kp SE_RPRN      &kp TAB           &kp LEFT      &kp DOWN       &kp UP      &kp RIGHT       &gresc
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &trans       &kp DEL        &trans        &trans        &trans            &trans        &kp RET       &trans        &trans        &trans
// └─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┘
                                  &kp DELETE      ___         &kp SPACE            ___           ___           ___
//                             └─────────────┴─────────────┴─────────────┘   └─────────────┴─────────────┴─────────────┘
            >;
        };

        adjust_layer {
            bindings = <
// ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐   ┌─────────────┬─────────────┬─────────────┬─────────────┬─────────────┐
     &bt BT_SEL 0  &out OUT_TOG  &kp C_VOL_UP  &kp C_NEXT       &trans            &trans        &kp F7        &kp F8        &kp F9       &kp F12
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &bt BT_SEL 1  &bt BT_CLR    &kp K_MUTE    &kp K_PP         &trans            &trans        &kp F4        &kp F5        &kp F6       &kp F11
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &bt BT_SEL 2  &ext_power EP_TOG &kp C_VOL_DN &kp C_PREV    &trans            &trans        &kp F1        &kp F2        &kp F3       &kp F10
// └─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┘
                                      ___          ___           ___                ___          ___           ___
//                             └─────────────┴─────────────┴─────────────┘   └─────────────┴─────────────┴─────────────┘
            >;
        };
    };
};
